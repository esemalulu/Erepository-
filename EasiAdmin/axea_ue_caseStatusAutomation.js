/**
 * Module Description
 * 
 * Version    Date            Author           Remarks
 * 1.00       25 Nov 2013     JSon
 *
 */


/**
 * The recordType (internal id) corresponds to the "Applied To" record in your script deployment. 
 * @appliedtorecord 
 * SupportCase (supportcase)
 * - User Event applied to Support Case will handle incoming message via Customer Center. 
 * 	 Assumption is that IF Case is update or created from Customer Center, Email Message IS provided.
 * 
 * Message (message)
 * - User event applied to Message will handle incoming message generated by user "Replying" to email generated from NetSuite
 * 
 * 
 * @param {String} type Operation types: create, edit, delete, xedit,
 *                      approve, cancel, reject (SO, ER, Time Bill, PO & RMA only)
 *                      pack, ship (IF only)
 *                      dropship, specialorder, orderitems (PO only) 
 *                      paybills (vendor payments)
 * @returns {Void}
 */
function caseStatusAfterSubmit(type){
	
	try {
		if (type == 'create' || type == 'edit') {
			var recType = nlapiGetRecordType();
			
			if (recType == 'message') {
				var newmsg = nlapiGetNewRecord();
				
				//ONLY for Message Create
				if (type != 'create') {
					log('debug','NOT Create','Exist');
					return;
				}
				
				var caseId =  newmsg.getFieldValue('activity');
				//exit out if message creation is NOT from Support Case
				if (!caseId) {
					log('debug','No Case ID','No Case ID for Op Type: '+type+' // Record Type: '+recType);
					return;
				}
				//get msg Author
				var msgAuthor = newmsg.getFieldValue('author');
				var authorType = nlapiLookupField('entity',msgAuthor,'type',true);
				if (authorType == 'Employee') {
					log('debug','Author is Employee','Author '+msgAuthor+' is Employee');
					return;
				}
				
				//get case status
				//13=status id to take action
				//12=status to set
				var caseStatus = nlapiLookupField('supportcase',caseId,'status',false);
				log('debug','Support Status',caseStatus);
				
				if (caseStatus == '13') {
					//update status of Case
					nlapiSubmitField('supportcase', caseId, 'status', '12', true);
					log('debug','Updating Status to 12','Update Status to 12');
				}
				
			} else if (recType == 'supportcase') {
				
				//Only Execute for Customer Center Role
				if (nlapiGetContext().getRoleCenter()=='CUSTOMER') {
					
					//check to make sure executing user is NOT Employee
					var execUserType = nlapiLookupField('entity',nlapiGetContext().getUser(),'type',true);
					if (execUserType == 'Employee') {
						log('debug','Exec User is Employee','Exec User '+execUserType+' is Employee');
						return;
					}
					
					var scCaseStatus = nlapiGetFieldValue('status');
					log('debug','Support Status',scCaseStatus);
					if (scCaseStatus == '13') {
						//update status of Case
						nlapiSubmitField('supportcase', nlapiGetRecordId(), 'status', '12', true);
						log('debug','Updating Status to 12','Update Status to 12');
					}
					
				}
				
			}			
		}
	} catch (statusupderr) {
		
		var errMsg = 'After Submit Type: '+type+' // Record Type: '+nlapiGetRecordType()+' // Record ID: '+nlapiGetRecordId()+' // Error: '+getErrText(statusupderr);
		
		log('error','Case Status Update Error',errMsg);
		
	}
}
