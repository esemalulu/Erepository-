

//******* Debugger to go through and Uncheck those Transactions marked as sent to EPS Sent
var ss = nlapiSearchRecord(null,'customsearch_mc_netactivity_eps_5_2');
for (var s=0; s < ss.length; s+=1)
{
	nlapiSubmitField(ss[s].getRecordType(), ss[s].getId(), 'custbody_nseps_senttoeps', 'F', false);
}


//currencyrate
var rec = nlapiCreateRecord('currencyrate');
alert(rec);
var recid= nlapiSubmitRecord(rec,true,true);
alert(recid);

consolidatedexchangerate

//File Encryption/Decryption
var AES_KEY = '6FDD6DDAD6595B425688F8BE673CDF01A72F46E0611B51908ED48D9A5173DC18';
var fileObj = nlapiLoadFile('5378');
var fileBase64 = nlapiEncrypt(fileObj.getValue(), 'base64');
alert(fileBase64);

var aesEncryptedVal = nlapiEncrypt(fileBase64,'aes',AES_KEY);
alert(aesEncryptedVal);

//var base64FileContent = nlapiDecrypt(fileBase64,'base64');
//alert(base64FileContent);

/*** Connecting to Restlet via TBA in NetSuite ****/
https://caligatio.github.io/jsSHA/ to gen hash for now
var request_data = {
	url: 'https://system.sandbox.netsuite.com/app/site/hosting/restlet.nl?script=84&deploy=1',
	method: 'POST',
	data: {}
};

var remoteAccountID = '3465108';
var restletUrl = '';
//user token
var token = {
	public: '8E3D391B-BF80-48E2-BD45-7B798EB53001',
	secret: '513daf78e2e1da3e3cba1e468bc7636b31ecc334bde0b32f40413fd64a292d3a'
};
//app credentials
var oauth = OAuth({
	consumer: {
		public: 'a7a46f9d821fc5d522c0460008c8feb9fabeb0c6370eaa0c07c745bbeb5717f4',
		secret: '59e7bfb8bfea1887a927402f952f81bbe2bf342893905382c0edc7d34583209e'
	},
	signature_method: 'HMAC-SHA1'
});

var oauth_data = {
		oauth_consumer_key: oauth.consumer.public,
		oauth_nonce: oauth.getNonce(),
		oauth_signature_method: oauth.signature_method,
		oauth_timestamp: oauth.getTimeStamp(),
		oauth_version: '1.0',
		oauth_token: token.public,
		realm: remoteAccountID
};

alert(JSON.stringify(oauth_data));

//Token Based Access
Authorization:
    OAuth oauth_signature="",
    oauth_version="1.0",
    oauth_nonce="123456",
    oauth_signature_method="HMAC-SHA1",
    oauth_consumer_key="",
    oauth_token="",
    oauth_timestamp="",
    realm="3465108" 
    	
 /**
oauth_signature (required) 
- Credentials to verify the authenticity of the request, generated by calling your application. 
The Token Secret and Consumer Secret are constructed as a key to sign the request, 
using a supported signature method (HMAC-SHA1 or HMAC-SHA256).


oauth_version (optional)
 - Must be set to “1.0”.

oauth_nonce (required) 
- Passes in a unique, random string. Used to verify that a request has never been made before.
    	
oauth_signature_method (required)
 - Must be set to HMAC-SHA1 or HMAC-SHA256. Declares which signature method is used.

oauth_consumer_key (required)
 - Consumer Key (client application ID) generated for the token-based application in NetSuite. 
 The unique value is matched to the token to establish ownership of the token.

oauth_token (required)
 - Token ID generated for the token-based application in NetSuite.

oauth_timestamp (required) 
- Passes in a positive integer expressed as the number of seconds since January 1, 1970 GMT.

realm (required) - NetSuite company ID
 */