/*
 ***********************************************************************
 *
 * The following javascript code is created by ERP Guru,
 * a NetSuite Partner. It is a SuiteFlex component containing custom code
 * intented for NetSuite (www.netsuite.com) and use the SuiteScript API.
 * The code is provided "as is": ERP Guru shall not be liable
 * for any damages arising out the intended use or if the code is modified
 * after delivery.
 *
 * Company: ERP Guru
 * Author: 	Kenny.dumaine@erpguru.com
 * File: 	AX_SUE_SetOriginFromMessage.js
 * Date: 	April 14th 2010
 *
 * Modified by Joe Son@Audaxium
 * Modified by robert.gama@javelin-tech.com - 2012-10-19
 *
 ***********************************************************************/
/** On after Submit, when creating a Case. The script looks at the incoming message to find if it comes from a web form.
 * If yes, it sets the support case origin as Web Form.
 *
 * @param {Object} type
 */

var SW_ADDON_TAG = 'Origin = Addon';
var WEBSITE_TAG = 'Origin = Webform';  // [Updated by Robert Gama: 2012-10-19 with new website tag]
var PARDOT_TAG = 'Full Prospect Details';

var WEB_FORM_ORIGIN = -5;  // Internal ID of Case Origin Type for Webform
var SW_ADDON_ORIGIN = 4; // Internal ID of Case Origin Type for SW Addon
var PARDOT_ORIGIN = 5;  // Internal ID of Case Origin Type for Pardot

var FIELD_ORIGIN = 'origin';
var FIELD_PRIORITY = 'priority';
var FIELD_PRODUCT = 'custevent_caseproduct';

var productValue = '';  // TBD - Will use to set the product fielt
var serialNumberValue = ''; // TBD - Will use to enter serial number
var priorityValue = '';  // TBD - Populate the case priority for form cases


function afterSubmitOriginFinding(type){
    //nlapiLogExecution("DEBUG", "Type", type);
    if (type == 'create') {
        //nlapiLogExecution('DEBUG', 'Create', 'Message');
        var caseID = nlapiGetRecordId();
        var message = nlapiGetFieldValue('incomingmessage');
        var initOrigin = nlapiGetFieldValue('origin');  // Gets the initial case origin
		var newOrigin = 1;  // Temporarily initialize newOrigin to email
		var isFromAutoGeneratedSource = false;  // Variable to identify case from an autogenerated source (website, addon, Pardot)  extract and update case fields
		
        //Check Incoming Message - Debug output message
        nlapiLogExecution('DEBUG','message detail',message);
		
        //Check if message came from SolidWorks Addon
        if (isMessageFromSwAddon(message)) {
        	nlapiLogExecution('DEBUG','SolidWorks Addon','Found ' + SW_ADDON_TAG + ' tagging in the message');
			isFromAutoGeneratedSource = true;
			//Check The Origin set on the Support Case
        	if (initOrigin != SW_ADDON_ORIGIN) {  
				newOrigin = SW_ADDON_ORIGIN;
        	}
		}
		//Check if message came from Online Webform
		else if (isMessageFromOnlineForm(message)) {
            nlapiLogExecution('DEBUG', 'Website Form','Found ' + WEBSITE_TAG + ' tagging in the message');
			isFromAutoGeneratedSource = true;
			//Check The Origin set on the Support Case
            if (initOrigin != WEB_FORM_ORIGIN) {  
				newOrigin = WEB_FORM_ORIGIN;
            } 
        }
		else if (isMessageFromPardot(message)) {
            nlapiLogExecution('DEBUG', 'Pardot Lead','Found ' + PARDOT_TAG + ' tagging in the message');
			isFromAutoGeneratedSource = true;
			//Check The Origin set on the Support Case
            if (initOrigin != PARDOT_ORIGIN) {  
				newOrigin = PARDOT_ORIGIN;
            } 
        }
		//Check if message came from SolidWorks Addon OR Online Webform
		if (isFromAutoGeneratedSource) {
			setCaseFieldValue(FIELD_ORIGIN, newOrigin, caseID);
			 
		}
    }
}

/* Function setCaseFieldValue sets the field values for cases
 * fieldID is the internal id of the field to be changed
 * fieldValue is the new value
 * aseID is the internal ID of the case
 *
 * @Param {object} fieldID
 * @Param {object} fieldValue
 * @Param {object} caseID 
*/
function setCaseFieldValue(fieldID, fieldValue, caseID) {
	nlapiLogExecution('DEBUG', 'Setting case ' + fieldID, 'Setting case ' + fieldID + ' to  = ' + fieldValue + ' for case internal ID = ' + caseID);
	nlapiSubmitField('supportcase', caseID, fieldID, fieldValue);
}


/**  isMessageFromSwAddon:  Function to test if message is from SolidWorks Addon
 * Checks to see if incoming message contains SolidWorks Addon tag
 * Origin = Addon
 */
function isMessageFromSwAddon(msg) {
	return msg.indexOf(SW_ADDON_TAG) != -1;
}

/**  isMessageFromOnlineForm:  Function to test if message is from Website
 * Checks to see if incoming message contains website tag
 * Origin = Web form
 */
function isMessageFromOnlineForm(msg){
	return msg.indexOf(WEBSITE_TAG) != -1;
}

/**  isMessageFromPardot:  Function to test if message is from Pardot
 * Checks to see if incoming message contains Pardot tag
 * Origin = Pardot
 */
function isMessageFromPardot(msg) {
	return msg.indexOf(PARDOT_TAG) != -1;
}




/* EXAMPLE WEBFORM DATA - OCT 2012

SoupermailConf = /main/scripts/problem.txt
Name = Robert Gama
Company = dshsfjdgj
Phone = 4169514262
Email = robertgama@gmail.com
Product = SolidWorks
SWSerialNumber = 0000 0000 0000 0000
SWVersion = 2013
SWServicePack = 2
EPDMVersion = 1
EPDMServicePack = 1
ObjetModel = Not Specified
DriveWorksPackage = Not Specified
OS = Windows XP 32 bit
Priority = Priority Low
Title = TEST WEBSITE CASE 2345sfsf
Description = Testing new script for setting case origin from web
*/

/* Internal ID's of Case Priority List ('priority')

Critical = 4
High = 1
Medium = 2
Low = 3
Question = 5
*/

/* Internal ID's of Product List ('customlist_supproduct') used in field: custevent_caseproduct

SolidWorks	6	 
Enterprise PDM	4	 
Workgroup PDM	7	 
Simulation	1	 
Plastics	13	 
Electrical	14	 
3DVIA	9	 
E3 WireWorks	3	 
Objet	8	 
PropertyLinks	5	 
DriveWorks	2	 
PlantWorks	10	 
BuiltWorks	12	 
OTHER	11
*/

/*  Case Origin Types for field = 'origin'

2	Phone
1	E-mail
-5	Web form
4	SW Add-on
3	Other
6	Pardot
*/

/*  Product Names from the Webform (In quotes will be in value in email, After is the name on webform)

"SolidWorks">SolidWorks Standard, Professional, or Premium
"EPDM">SolidWorks Enterprise PDM (EPDM)
"WPDM">SolidWorks Workgroup PDM (WPDM)
"Simulation">SolidWorks Simulation
"3DVIA Composer">3DVIA Composer
"E3.WireWorks">E�.Series or E�.WireWorks
"Objet">Objet 3D Printer
"DriveWorks">DriveWorks
"PropertyLinks">PropertyLinks
"PlantWorks">PlantWorks
"Other">Other product
*/

/*  Old isMessageFromOnlineForm function before Rod added the origin field  -  Reference for regEx for later use.
	//msg = msg.replace(/\s/gm,'');  // Replace all spaces, tabs, line returns, etc. with nothing - REMOVE ALL SPACES
	//var patt = /Name\=.+Company\=.+Phone\=.+Email\=.+Product\=.+SerialNumber\=/gm;  // Regular expression pattern to test
	//var isMatch = patt.test(msg);  //  Tests if the pattern can be found in the string
	//nlapiLogExecution('DEBUG', 'Online Web Form Test', 'Matches for website = ' + isMatch);
	//return isMatch;
*/