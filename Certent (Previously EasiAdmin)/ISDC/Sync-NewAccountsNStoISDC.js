/**
 * Module Description
 * 
 * Version    Date            Author           Remarks
 * 1.00       10 Mar 2016     WORK-rehanlakhani
 *
 */

/**
 * @param {String} type Context Types: scheduled, ondemand, userinterface, aborted, skipped
 * @returns {Void}
 */

var connection;
var URL = "https://certent.insidesales.com/do=noauth/rest/service";
var user = ["audaxium", "admin", "bvmcYVpFboCHd1b6KUSTdtiI2FusNdVU"];
var auth = {};
var header = {};
var date = new Date();
/**
 * JS 5/2/2016 - 12 hours look up process changed. 
 * 				 MUST use milisecond calculation 
var time = new Date();
	time.setHours(date.getHours() - 12);
*/
var twlvHoursAgoDate = date.getTime() - (12 * 3600000);

twlvHoursAgoDate = new Date(twlvHoursAgoDate);

function scheduled(type) {
	//Use milisecond calculated date/time object
	var today = nlapiDateToString(twlvHoursAgoDate, 'datetime');
	
	log(
		'debug',
		'today // 12 hours ago date',
		nlapiDateToString(date,'datetime')+' // '+
		today
	);
	
	var customerStatus = ["13","21","31","23","25","24","7","10","8","20","11","14","22","32"];
	
	var searchFilter = [
	                    	new nlobjSearchFilter('status', null, 'anyOf', null, customerStatus),
	                    	new nlobjSearchFilter('datecreated', null, 'onorafter', '4/15/2016', null),
	                    	//new nlobjSearchFilter('datecreated', null, 'onorafter', today, null),
	                    	new nlobjSearchFilter('custentity_aux_isdc_record_id', null, 'isempty', null, null)
	                    ];

	var searchColumn = [
	                    	new nlobjSearchColumn('internalid'), // NetSuite Record ID, ISDC External ID - Linked records via ID's generated by systems. 
		                    new nlobjSearchColumn('entitystatus'), //Lead Status 
		                    new nlobjSearchColumn('companyname'), // Company Name 
		                    new nlobjSearchColumn('phone'), // Phone Number 
		                    new nlobjSearchColumn('url'), // Website 
		                    new nlobjSearchColumn('email'), // Email
		                    new nlobjSearchColumn('address1'), // Address1 
		                    new nlobjSearchColumn('address2'), // Address2 
		                    new nlobjSearchColumn('city'), // City 
		                    new nlobjSearchColumn('state'), // State 
		                    new nlobjSearchColumn('zipcode'), // Zip 
		                    new nlobjSearchColumn('country'), // Country
		                    new nlobjSearchColumn('custentity_wrok_w_channel_partner'), //Working with Channel Partner? 
		                    new nlobjSearchColumn('partner'), // Channel Partner 
		                    new nlobjSearchColumn('custentitylead_type'), // Lead Type 
		                    new nlobjSearchColumn('custentity_easi_pulbic_company'), //Public Company 
		                    new nlobjSearchColumn('custentity_ipo_date'), // IPO Date 
		                    new nlobjSearchColumn('custentity_easi_annual_revenue'), //Annual Revenue 
		                    new nlobjSearchColumn('custentity_easi_employee_count'), // Number of Employees 
		                    new nlobjSearchColumn('custentity_easi_ticker_symbol'), //Ticker Symbol 
		                    new nlobjSearchColumn('custentity_rivet_recent_sec_filings'), // Recent SEC Filing 
		                    new nlobjSearchColumn('custentity_rivet_xbrl_vendor'), // XBRL Vendor 
		                    new nlobjSearchColumn('custentity_rivet_filing_agent'), //Filing Agent 
		                    new nlobjSearchColumn('custentity_easi_industry'), // Industry 
		                    new nlobjSearchColumn('custentity_broker'), // Broker 
		                    new nlobjSearchColumn('custentity_adx_partnerpillar'), //Channel Parter Pillar 
		                    new nlobjSearchColumn('datecreated','opportunity'), // Date Created (opportunity) 
		                    new nlobjSearchColumn('custentity_date_lsa'), // Last Sales Activity 
		                    new nlobjSearchColumn('custentityrelationship_manager'), //CRM 
		                    new nlobjSearchColumn('custentity_easi_term_risk_status'), //Termination Risk Status 
	                    	new nlobjSearchColumn('custentity_referenceable_client'), // Turnaround Status 
	                    	new nlobjSearchColumn('custentity_legacy_system'), // Equity Legacy System 
	                    	new nlobjSearchColumn('closedate','opportunity'), // Close Date (opportunity) 
	                    	new nlobjSearchColumn('salesrep')
	                   ];
	
	
	var resultSet = nlapiSearchRecord('customer', null, searchFilter, searchColumn);
	if(resultSet != null)
	{
		var accounts = [];
		for(var i = 0; i<resultSet.length; i+=1)
		{
			var val = isdcCountry(resultSet[i].getValue('country'));
			var account = {};
				account['customFields_10']     = resultSet[i].getValue('internalid');
				account['customFields_77']     = resultSet[i].getText('entitystatus');
				account['name']                = resultSet[i].getValue('companyname');
				account['billing_phone']       = resultSet[i].getValue('phone');
				account['website']             = resultSet[i].getValue('url');
				account['billing_email']       = resultSet[i].getValue('email');
				account['billing_addr1']       = resultSet[i].getValue('address1');
				account['billing_addr2']       = resultSet[i].getValue('address2');
				account['billing_city']        = resultSet[i].getValue('city');
				if(val == "CA")
				{
					account["billing_state"] 		= isdcProvince(resultSet[i].getValue('state'));
				}
				else
				{
					account["billing_state"]		= isdcStates(resultSet[i].getValue('state'));
				}
				account['billing_zip']         = resultSet[i].getValue('zipcode');
				account["billing_country"] 	   = isdcCountry(resultSet[i].getValue('country'));
				account['customFields_66']     = resultSet[i].getText('custentity_wrok_w_channel_partner');
				account['customFields_20']     = resultSet[i].getText('partner');
				account['customFields_54']     = "https://system.netsuite.com/app/common/entity/custjob.nl?id=" + resultSet[i].getValue('internalid');
				account['customFields_26']     = resultSet[i].getText('custentitylead_type');
				account['customFields_28']     = resultSet[i].getText('custentity_easi_pulbic_company');
				account['customFields_30']	   = resultSet[i].getValue('custentity_ipo_date');
				account['customFields_32']	   = resultSet[i].getValue('custentity_easi_annual_revenue');
				account['number_of_employees'] = resultSet[i].getValue('custentity_easi_employee_count');
				account['ticker_symbol']       = resultSet[i].getValue('custentity_easi_ticker_symbol');
				account['customFields_75']     = resultSet[i].getValue('custentity_rivet_recent_sec_filings');
				account['customFields_56']     = resultSet[i].getText('custentity_rivet_xbrl_vendor');
				account['customFields_58']     = resultSet[i].getText('custentity_rivet_filing_agent');
				account['customFields_70']     = resultSet[i].getValue('custentity_easi_industry');
				account['customFields_81']     = resultSet[i].getText('custentity_adx_partnerpillar');
				account['customFields_64']     = resultSet[i].getText('datecreated','opportunity');
				account['customFields_52']     = resultSet[i].getText('custentity_date_lsa');
				account['customFields_48']     = resultSet[i].getText('custentityrelationship_manager');
				account['customFields_85']     = resultSet[i].getText('custentity_easi_term_risk_status');
				account['customFields_83']     = resultSet[i].getText('custentity_referenceable_client');
				account['customFields_62']     = resultSet[i].getText('custentity_legacy_system');
				account['customFields_7']      = resultSet[i].getText('closedate','opportunity');
				account['customFields_73']     = resultSet[i].getText('salesrep');
				accounts.push(account);
		}
		
		try
		{
			auth["operation"] = "apiLogin";
			auth["parameters"] = user;

			connection = nlapiRequestURL(URL, JSON.stringify(auth), null, null, "POST");
			
			var headers = connection.getAllHeaders();
			var	session = connection.getHeaders("Set-Cookie");
			var sess = session[0].split(';');
				header["Cookie"] = sess[0];
			
			var newAccounts = {};
				newAccounts["operation"] = "upsertAccounts";
				newAccounts["parameters"] = [accounts];
			
			var isdcResponse = nlapiRequestURL(URL, JSON.stringify(newAccounts), header, null, "POST");
			var isdcBody = JSON.parse(isdcResponse.body);
			
			if(isdcBody != null)
			{
				for(var i = 0; i<resultSet.length; i+=1)
				{
					var lastUpdated = nlapiDateToString(date,'datetimetz');
					var NSId = resultSet[i].getValue('internalid');
					nlapiSubmitField('customer', NSId, 'custentity_aux_isdc_record_id', isdcBody[i].toString());
					nlapiSubmitField('customer', NSId, 'custentity_aux_isdc_lastupdated', lastUpdated);
				}
			}
		}
		catch (newaccterr)
		{
			//5/2/2016 - Temp Error handling
			var eSbj = 'ISDC Error: New Account to ISDC Error',
			eMsg = 'Error while processing SYNC-NewAccountsNStoISDC.js<br/>'+
				   '<b>ERROR: </b><br/>'+
				   getErrText(newaccterr) +'<br/><br/><b>NetSuite Record ID: ' + NSId + '</b>' +
				   '<b>NS to ISDC JSON:</b><br/>'+
				   JSON.stringify(accounts);
		
			nlapiSendEmail(-5, 'easiadmin@audaxium.com', eSbj, eMsg, null, null, null, null, true);
		}
		
	}
	
	
}
